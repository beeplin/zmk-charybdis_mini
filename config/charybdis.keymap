/* spellchecker:disable */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&lt { flavor = "hold-preferred"; };
&sk { release-after-ms = <2000>; quick-release; lazy; };

/ {
    behaviors {
        lsk: layer_sticky_key      { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sk>; };
        lsl: layer_sticky_layer    { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sl>; };
        lmk: layer_mouse_key       { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&mkp>; };
        lcw: layer_caps_word       { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&caps_word>; };
        hsk: hold_sticky_key       { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&sk>; };
        hsl: hold_sticky_layer     { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&sl>; };
        hmk: hold_mouse_key        { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&mkp>; };
        hcw: hold_caps_word        { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&caps_word>; };
    };
    macros {
        win_sleep:     win_sleep     { wait-ms = <50>; tap-ms = <5>; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LG(X) &kp U &kp S>; };
        win_hibernate: win_hibernate { wait-ms = <50>; tap-ms = <5>; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LG(X) &kp U &kp H>; };
        win_restart:   win_restart   {! wait-ms = <50>; tap-ms = <5>; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LG(X) &kp U &kp R>; };
        win_shutdown:  win_shutdown  { wait-ms = <50>; tap-ms = <5>; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LG(X) &kp U &kp U>; };
    };
    keymap {
        compatible = "zmk,keymap";
        COLEMAK_MOD_0 { bindings = <
&kp Y            &kp W            &kp F            &kp P            &kp B                             &kp K            &kp L            &kp U            &kp Q            &kp SEMI
&kp A            &kp R            &kp S            &kp T            &kp G                             &kp M            &kp N            &kp E            &kp I            &kp O
&kp Z            &kp X            &kp C            &kp D            &kp V                             &kp J            &kp H            &kp COMMA        &kp DOT          &kp FSLH
                                  &lsk 4 LALT      &lsk 2 LGUI      &kp SPACE                         &hsk LCTRL LCTRL &lsk 3 LSHFT >; };
        QWERTY_1 { bindings = <
&kp Q            &kp W            &kp E            &kp R            &kp T                             &kp Y            &kp U            &kp I            &kp O            &kp P
&kp A            &kp S            &kp D            &kp F            &kp G                             &kp H            &kp J            &kp K            &kp L            &kp SEMI
&kp Z            &kp X            &kp C            &kp V            &kp B                             &kp N            &kp M            &kp COMMA        &kp DOT          &kp FSLH
                                  &trans           &trans           &trans                            &trans           &trans >; };
        NAV_NUM_2 { bindings = <
&kp HOME         &kp BSPC         &kp UP           &kp DEL          &kp END                           &kp KP_DIVIDE    &kp N7           &kp N8           &kp N9           &kp KP_SUBTRACT
&kp ESC          &kp LEFT         &kp DOWN         &kp RIGHT        &kp PG_UP                         &kp KP_MULTIPLY  &kp N4           &kp N5           &kp N6           &kp KP_PLUS
&kp LSHFT        &kp LALT         &kp TAB          &kp ENTER        &kp PG_DN                         &kp INS          &kp N1           &kp N2           &kp N3           &kp KP_DOT
                                  &none            &none            &none                             &kp LCTRL        &kp N0 >; };
        SYMBOL_3 { bindings = <
&kp EXCL         &kp AT           &kp POUND        &kp DLLR         &kp PRCNT                         &kp CARET        &kp AMPS         &kp ASTRK        &kp PIPE         &kp BSLH
&kp GRAVE        &kp LBKT         &kp LBRC         &kp LPAR         &kp SQT                           &kp DQT          &kp EQUAL        &kp MINUS        &kp PLUS         &kp COLON
&kp TILDE        &kp RBKT         &kp RBRC         &kp RPAR         &none                             &none            &kp UNDER        &kp LT           &kp GT           &kp QMARK
                                  &none            &mo 8            &caps_word                        &none            &none >; };
        MED_FUN_4 { bindings = <
&kp C_MUTE       &kp C_AC_BACK    &msc SCRL_UP     &kp C_AC_FORWARD &win_shutdown                     &win_restart     &kp F7           &kp F8           &kp F9           &kp F12 
&kp C_VOL_UP     &msc SCRL_LEFT   &msc SCRL_DOWN   &msc SCRL_RIGHT  &kp C_BRI_UP                      &win_sleep       &kp F4           &kp F5           &kp F6           &kp F11 
&kp C_VOL_DN     &kp C_PREV       &kp C_PLAY_PAUSE &kp C_NEXT       &kp C_BRI_DN                      &win_hibernate   &kp F1           &kp F2           &kp F3           &kp F10 
                                  &none            &none            &none                             &kp PRINTSCREEN  &kp K_APP >; };
        MOUSE_5 { bindings = <
&none            &none            &none            &none            &none                             &none            &none            &none            &none            &none
&kp LSHFT        &kp LALT         &kp LCTRL        &mo 6            &mo 7                             &none            &none            &none            &none            &none
&none            &none            &mkp MB4         &mkp MB5         &none                             &none            &none            &none            &none            &none
                                  &mkp MCLK        &mkp LCLK        &mkp RCLK                         &none            &none >; };
        SCROLL_6 { bindings = <
&none            &trans           &trans           &trans           &trans                            &trans           &trans           &trans           &trans           &trans
&trans           &trans           &trans           &trans           &trans                            &trans           &trans           &trans           &trans           &trans
&trans           &trans           &trans           &trans           &trans                            &trans           &trans           &trans           &trans           &trans
                                  &trans           &trans           &trans                            &trans           &trans >; };
        SNIPE_7 { bindings = <
&trans           &trans           &trans           &trans           &trans                            &trans           &trans           &trans           &trans           &trans
&trans           &trans           &trans           &trans           &trans                            &trans           &trans           &trans           &trans           &trans
&trans           &trans           &trans           &trans           &trans                            &trans           &trans           &trans           &trans           &trans
                                  &trans           &trans           &trans                            &trans           &trans >; };
        CONFIG_8 { bindings = <
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                      &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR
&bt BT_DISC 0    &bt BT_DISC 1    &bt BT_DISC 2    &bt BT_DISC 3    &bt BT_DISC 4                     &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF
&bootloader      &bt BT_PRV       &bt BT_CLR       &bt BT_NXT       &out OUT_TOG                      &rgb_ug RGB_TOG  &to 0            &to 1            &none            &bootloader
                                  &none            &none            &none                             &none            &none >; };
    };
};
